# Secondary entry point for the `epfl_si.rancher.rke2_node` (*not* invoked by main.yml)
# that *uninstalls* RKE2 from a node, after unregistering it from Kubernetes.

- include_tasks:
    file: _remove_k8s_node.yml
    apply:
      tags: always
      delegate_to: "{{ _some_rke2_controlplane_node }}"
  vars:
    _some_rke2_controlplane_node: >-
      {{ _some_rke2_controlplane_hostvars["inventory_hostname"] }}
    _some_rke2_controlplane_hostvars: >-
      {{ hostvars.values()
         | selectattr("ansible_rancher_cluster_name", "defined")
         | selectattr("ansible_rancher_cluster_name", "==", ansible_rancher_cluster_name)
         | selectattr("inventory_hostname", "!=", inventory_hostname)
         | select("epfl_si.rancher.control_plane_node")
         | shuffle | first }}

- epfl_si.rancher.rancher_machine:
    # Note: rancher_rke2_node_name comes from ../defaults/main.yml
    # (unless overridden e.g. in the role user's vars)
    name: "{{ rancher_rke2_node_name }}"
    state: absent

# TODO: here we should wait for Rancher to be done wrangling the etcd
# quorum, in case the deleted node was a quorum node; i.e. in terms of
# the UI, we should wait for all surviving nodes to reach Running
# state again.

- ansible.builtin.shell:
    cmd: |
      set -e -x

      if [ -f "/usr/local/bin/rancher-system-agent-uninstall.sh" ]; then
        echo DOING_WORK
        systemctl stop rancher-system-agent
        /usr/local/bin/rancher-system-agent-uninstall.sh
      fi

      if [ -f "/usr/local/bin/rke2-killall.sh" ]; then
        echo DOING_WORK
        /usr/local/bin/rke2-killall.sh
      fi
      if [ -f "/usr/local/bin/rke2-uninstall.sh" ]; then
        echo DOING_WORK
        /usr/local/bin/rke2-uninstall.sh
      fi
  register: _uninstall_script
  changed_when: >-
    "DOING_WORK" in _uninstall_script.stdout

- name: Check that /var/lib/rancher is (almost) empty
  changed_when: false
  ansible.builtin.shell:
    cmd: |
      set -e -x
      if [ ! -d /var/lib/rancher ]; then exit 0; fi
      remaining="$(du -sb /var/lib/rancher | cut -f1)"
      if [ remaining -ge 1024 ]; then
         echo >&2 "FAILED: too much stuff in /var/lib/rancher after (botched?) uninstall."
         echo >&2 "FAILED: Please wield the chainsaw yourself."
         exit 2
      fi
